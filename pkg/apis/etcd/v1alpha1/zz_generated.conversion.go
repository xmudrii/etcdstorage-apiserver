// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	etcd "github.com/xmudrii/etcdstorage-apiserver/pkg/apis/etcd"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(scheme *runtime.Scheme) error {
	return scheme.AddGeneratedConversionFuncs(
		Convert_v1alpha1_EtcdStorage_To_etcd_EtcdStorage,
		Convert_etcd_EtcdStorage_To_v1alpha1_EtcdStorage,
		Convert_v1alpha1_EtcdStorageList_To_etcd_EtcdStorageList,
		Convert_etcd_EtcdStorageList_To_v1alpha1_EtcdStorageList,
		Convert_v1alpha1_EtcdStorageSpec_To_etcd_EtcdStorageSpec,
		Convert_etcd_EtcdStorageSpec_To_v1alpha1_EtcdStorageSpec,
		Convert_v1alpha1_EtcdStorageStatus_To_etcd_EtcdStorageStatus,
		Convert_etcd_EtcdStorageStatus_To_v1alpha1_EtcdStorageStatus,
	)
}

func autoConvert_v1alpha1_EtcdStorage_To_etcd_EtcdStorage(in *EtcdStorage, out *etcd.EtcdStorage, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_EtcdStorageSpec_To_etcd_EtcdStorageSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_EtcdStorageStatus_To_etcd_EtcdStorageStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_EtcdStorage_To_etcd_EtcdStorage is an autogenerated conversion function.
func Convert_v1alpha1_EtcdStorage_To_etcd_EtcdStorage(in *EtcdStorage, out *etcd.EtcdStorage, s conversion.Scope) error {
	return autoConvert_v1alpha1_EtcdStorage_To_etcd_EtcdStorage(in, out, s)
}

func autoConvert_etcd_EtcdStorage_To_v1alpha1_EtcdStorage(in *etcd.EtcdStorage, out *EtcdStorage, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_etcd_EtcdStorageSpec_To_v1alpha1_EtcdStorageSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_etcd_EtcdStorageStatus_To_v1alpha1_EtcdStorageStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_etcd_EtcdStorage_To_v1alpha1_EtcdStorage is an autogenerated conversion function.
func Convert_etcd_EtcdStorage_To_v1alpha1_EtcdStorage(in *etcd.EtcdStorage, out *EtcdStorage, s conversion.Scope) error {
	return autoConvert_etcd_EtcdStorage_To_v1alpha1_EtcdStorage(in, out, s)
}

func autoConvert_v1alpha1_EtcdStorageList_To_etcd_EtcdStorageList(in *EtcdStorageList, out *etcd.EtcdStorageList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]etcd.EtcdStorage, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_EtcdStorage_To_etcd_EtcdStorage(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_EtcdStorageList_To_etcd_EtcdStorageList is an autogenerated conversion function.
func Convert_v1alpha1_EtcdStorageList_To_etcd_EtcdStorageList(in *EtcdStorageList, out *etcd.EtcdStorageList, s conversion.Scope) error {
	return autoConvert_v1alpha1_EtcdStorageList_To_etcd_EtcdStorageList(in, out, s)
}

func autoConvert_etcd_EtcdStorageList_To_v1alpha1_EtcdStorageList(in *etcd.EtcdStorageList, out *EtcdStorageList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EtcdStorage, len(*in))
		for i := range *in {
			if err := Convert_etcd_EtcdStorage_To_v1alpha1_EtcdStorage(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_etcd_EtcdStorageList_To_v1alpha1_EtcdStorageList is an autogenerated conversion function.
func Convert_etcd_EtcdStorageList_To_v1alpha1_EtcdStorageList(in *etcd.EtcdStorageList, out *EtcdStorageList, s conversion.Scope) error {
	return autoConvert_etcd_EtcdStorageList_To_v1alpha1_EtcdStorageList(in, out, s)
}

func autoConvert_v1alpha1_EtcdStorageSpec_To_etcd_EtcdStorageSpec(in *EtcdStorageSpec, out *etcd.EtcdStorageSpec, s conversion.Scope) error {
	// WARNING: in.Reference requires manual conversion: does not exist in peer-type
	// WARNING: in.ReferenceType requires manual conversion: inconvertible types (*github.com/xmudrii/etcdstorage-apiserver/pkg/apis/etcd/v1alpha1.ReferenceType vs github.com/xmudrii/etcdstorage-apiserver/pkg/apis/etcd.ReferenceType)
	return nil
}

func autoConvert_etcd_EtcdStorageSpec_To_v1alpha1_EtcdStorageSpec(in *etcd.EtcdStorageSpec, out *EtcdStorageSpec, s conversion.Scope) error {
	// WARNING: in.EtcdStorageReference requires manual conversion: does not exist in peer-type
	// WARNING: in.ReferenceType requires manual conversion: inconvertible types (github.com/xmudrii/etcdstorage-apiserver/pkg/apis/etcd.ReferenceType vs *github.com/xmudrii/etcdstorage-apiserver/pkg/apis/etcd/v1alpha1.ReferenceType)
	return nil
}

func autoConvert_v1alpha1_EtcdStorageStatus_To_etcd_EtcdStorageStatus(in *EtcdStorageStatus, out *etcd.EtcdStorageStatus, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha1_EtcdStorageStatus_To_etcd_EtcdStorageStatus is an autogenerated conversion function.
func Convert_v1alpha1_EtcdStorageStatus_To_etcd_EtcdStorageStatus(in *EtcdStorageStatus, out *etcd.EtcdStorageStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_EtcdStorageStatus_To_etcd_EtcdStorageStatus(in, out, s)
}

func autoConvert_etcd_EtcdStorageStatus_To_v1alpha1_EtcdStorageStatus(in *etcd.EtcdStorageStatus, out *EtcdStorageStatus, s conversion.Scope) error {
	return nil
}

// Convert_etcd_EtcdStorageStatus_To_v1alpha1_EtcdStorageStatus is an autogenerated conversion function.
func Convert_etcd_EtcdStorageStatus_To_v1alpha1_EtcdStorageStatus(in *etcd.EtcdStorageStatus, out *EtcdStorageStatus, s conversion.Scope) error {
	return autoConvert_etcd_EtcdStorageStatus_To_v1alpha1_EtcdStorageStatus(in, out, s)
}
